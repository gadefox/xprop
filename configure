#!/bin/sh

PREFIX="/usr/local"
VERSION="2.0.0"
TAB_SPACES=1
PIXEL_CHARS=2

verbose=0
debug=0

red=31
green=32
yellow=33
blue=34
magenda=35
cyan=36
white=37

printc () {
  printf "\033[%d;1m%b\033[0m" $1 "$2"
}

ok () {
  printc $green "\tOK\n"
}

fail () {
  printc $red "\tFAIL\n"
}

warn () {
  printc $yellow "warning: "
  printf "%b\n" "$1"
}

status () {
  printf $2
  if [ $1 = 0 ]; then
    ok
  else
    fail
    exit 1
  fi
}

bin () {
  type $1 >/dev/null 2>&1
  # $? == 0?
  status $? $1
}

lib () {
  pkg-config $1 >/dev/null 2>&1
  # $? == 0?
  status $? $1
}

bins () {
  printc $white "checking building tools..\n"
  bin pkg-config
  bin rm
  bin mkdir
  bin cp
  bin chmod
  bin strip
  bin gzip
}

libs () {
  printc $white "checking libraries..\n"
  LIB_NAMES="x11"
  for i in $LIB_NAMES; do
    lib $i
  done
}

append () {
  printf "%b\n" "$*" >> config.mk
}

config () {
  printc $white "creating configuration file"
  append "# Generated by configure script"
  append "BIN_DIR = $PREFIX/bin"
  append "LIB_DIR = $PREFIX/lib"
  append "MAN_DIR = $PREFIX/share/man/man1\n"
  if [ $verbose = 1 ]; then
    append "QUIET_CC = "
    append "QUIET_LINK = "
  else
    append "QUIET_CC = @echo 'CC '\$@;"
    append "QUIET_LINK = @echo 'LINK '\$@;"
  fi
  append "\nCFLAGS = -DHAVE_WCHAR_H -DHAVE_WCTYPE_H -DHAVE_LANGINFO_H -DVERSION=\\\"$VERSION\\\" -DTAB_SPACES=$TAB_SPACES -DPIXEL_CHARS=$PIXEL_CHARS `pkg-config --cflags $LIB_NAMES`"
  [ $debug = 1 ] && append "CFLAGS += -g -DDEBUG" || append "CFLAGS += -O3"
  append "\nLIBS = `pkg-config --libs $LIB_NAMES`"
  ok
}

printf "configure: create 'config.mk' include file\n"
for arg; do
  opt=${arg%%=*}
  var=${arg#*=}
  case "$opt" in
    --verbose)
      verbose=1
    ;;
    --debug)
      debug=1
    ;;
    --prefix)
      PREFIX="$var"
    ;;
    --tabspaces)
      TAB_SPACES="$var"
    ;;
    --pixelchars)
      PIXEL_CHARS="$var"
    ;;
    -h|--help)
      printf "usage: ./"
      printc $white "configure "
      printf "[--verbose] [--debug] [--prefix=<dir>] [--tabspaces=<num>] [--pixelchars=<num>]\n"
      exit 1
    ;;
    *)
      warn "unknown option $opt" >&2
    ;;
  esac
done

bins
libs
config

printf "type "
printc $white "make"
printf " to build the program\n"
